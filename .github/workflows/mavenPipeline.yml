# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
 push:
   branches: main
 workflow_dispatch:
 pull_request:
   branches: [main]

jobs:

  epl_job:
    runs-on: ubuntu-latest
    name: EPL Job
    steps:
      - uses: actions/checkout@v2
      - id: foo
        uses: ./.github/actions/eplaction
        with:
          some_id: 'Hi EPL'
  CI:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:    
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Build with Maven
      run: mvn -Drevision=1.0.0.${{ github.run_number }} -B package --file pom.xml
    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
        
  Docker_Build:
    secrets: 
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    needs: [CI]
    uses: SrinivasKashi/appId-appComponent-cicd/.github/workflows/docker-image.yml@main
 
  Sonar_Scan:
      uses: SrinivasKashi/appId-appComponent-cicd/.github/workflows/sonar.yml@main
      secrets:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  trufflehogScan:
      name: Secret Scan Using Trufflehog
      runs-on: ubuntu-latest      
      steps:
        - name: Check out the code
          uses: actions/checkout@v2
          with:
            fetch-depth: 0
        - name: trufflehog-actions-scan
          uses: edplato/trufflehog-actions-scan@master
          with:
            scanArguments: "--regex --entropy=False --max_depth=5"
  CodeCov_Scan:
    secrets: 
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    needs: [CI]
    uses: SrinivasKashi/appId-appComponent-cicd/.github/workflows/codeCov.yml@main            
            
  blackduck:
      name: SCA Scan using BlackDuck
      runs-on: ubuntu-latest
      steps:
        - name: Check out the code
          uses: actions/checkout@v2
          with:
            fetch-depth: 0
        - name: Set up JDK
          uses: actions/setup-java@v1
          with:
            java-version: 1.8
        - name: Upload to CoPilot
          run: bash <(curl -s https://copilot.blackducksoftware.com/ci/githubactions/scripts/upload)
